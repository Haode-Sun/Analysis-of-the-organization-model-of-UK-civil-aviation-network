load("E:/MSC UDAS/TRAN5340M Transport Data Science (33793)/Final coursework/201606611/.RData")
knitr::opts_chunk$set(
echo = TRUE,
fig.align = "center",
fig.pos = "H",
out.width = "100%"
)
username <- "sevensun"
password <- "Jinluyi862"
url <- "https://opensky-network.org/api/flights/all"
start_datetime <- as.POSIXct("2022-01-10", tz = "GMT")
end_datetime <- as.POSIXct("2022-01-24", tz = "GMT")
interval_size <- 2 * 60 * 60  # 2 hours in seconds
# Initialize an empty data frame to store the combined results
df_combined <- data.frame()
# Iterate over the time range in two-hour intervals
current_datetime <- start_datetime
while (current_datetime < end_datetime) {
# Calculate the start and end timestamps for the current interval
current_start <- as.numeric(current_datetime)
current_end <- as.numeric(current_datetime + interval_size)
# Make the request
response <- GET(url,
query = list(begin = current_start, end = current_end),
authenticate(username, password, type = "basic"))
stop_for_status(response)
# Convert the response JSON to a data frame
data <- fromJSON(content(response, "text"), flatten = TRUE)
df_current <- as.data.frame(data)
# Append the current interval's data to the combined data frame
df_combined <- bind_rows(df_combined, df_current)
# Move to the next interval
current_datetime <- current_datetime + interval_size
}
username <- "sevensun"
password <- "Jinluyi862"
url <- "https://opensky-network.org/api/flights/all"
start_datetime <- as.POSIXct("2022-01-10", tz = "GMT")
end_datetime <- as.POSIXct("2022-01-24", tz = "GMT")
interval_size <- 2 * 60 * 60  # 2 hours in seconds
# Initialize an empty data frame to store the combined results
df_combined <- data.frame()
# Iterate over the time range in two-hour intervals
current_datetime <- start_datetime
while (current_datetime < end_datetime) {
# Calculate the start and end timestamps for the current interval
current_start <- as.numeric(current_datetime)
current_end <- as.numeric(current_datetime + interval_size)
# Make the request
response <- GET(url,
query = list(begin = current_start, end = current_end),
authenticate(username, password, type = "basic"))
stop_for_status(response)
# Convert the response JSON to a data frame
data <- fromJSON(content(response, "text"), flatten = TRUE)
df_current <- as.data.frame(data)
# Append the current interval's data to the combined data frame
df_combined <- bind_rows(df_combined, df_current)
# Move to the next interval
current_datetime <- current_datetime + interval_size
}
